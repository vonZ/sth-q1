/******
  |-- Mixins --| 

  |----------------|
******/


/****** Breakpoints ******/
@mixin respond-to($breakpoint) {
  @if $breakpoint == "smallMobile" {
    @media (min-width: 0px) and (max-width: $smallMobile) {
      @content;
    }
  }

  @else if $breakpoint == "small" {
    @media (min-width: $mobile) {
      @content;
    }
  }

  @else if $breakpoint == "medium" {
    @media (min-width: 832px) and (max-width: $medium) {
      @content;
    }
  }

  @else if $breakpoint == "big" {
    @media (min-width: 832px) and (max-width: $big) {
      @content;
    }
  }

}

/****** Custom mixins ******/
@mixin columnText($columnCount, $columnGap, $minHeight, $minWidth) {

    @if($minHeight) == '' {
      -webkit-column-count: $columnCount;
      -moz-column-count: $columnCount;
      column-count: $columnCount;
      -webkit-column-gap: $columnGap;
      -moz-column-gap: $columnGap;
      column-gap: $columnGap;
    }

    @if($minWidth == '') {
      -webkit-column-count: $columnCount;
      -moz-column-count: $columnCount;
      column-count: $columnCount;
      -webkit-column-gap: $columnGap;
      -moz-column-gap: $columnGap;
      column-gap: $columnGap;
    } 

    @else {
        -webkit-column-count: $columnCount;
        -moz-column-count: $columnCount;
        column-count: $columnCount;
        -webkit-column-gap: $columnGap;
        -moz-column-gap: $columnGap;
        column-gap: $columnGap;
        min-height: $minHeight;
        width: $minWidth; 
    }

   
}